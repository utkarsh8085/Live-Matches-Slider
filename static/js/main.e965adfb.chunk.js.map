{"version":3,"sources":["constants.js","components/live-event.jsx","utils.js","components/live-matches.jsx","App.js","index.js"],"names":["sportsIcons","LiveEvent","props","liveEvent","liveScore","isScoreAvailable","score","iconType","includes","sport","concat","toLowerCase","react_default","a","createElement","key","id","className","away","home","name","dateTime","eventDate","Date","setHours","hours","getHours","minutes","getMinutes","formatTodayDate","year","getFullYear","month","getMonth","date","getDate","formateDate","formatEventDate","start","href","rel","target","role","prototype","PropTypes","shape","string","number","object","LiveMatches","liveMatches","length","lib_default","dots","speed","autoplay","slidesToShow","slidesToScroll","autoplaySpeed","liveEvents","map","match","event","live_event","liveData","array","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isLoading","error","getLiveMatches","_this2","currentTime","getTime","lastFetchedTime","localStorage","getItem","data","parseInt","fetch","then","response","json","setState","setItem","JSON","stringify","catch","parse","dist_default","color","live_matches","Component","ReactDOM","render","BrowserRouter","basename","process","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e965adfb.chunk.js","sourcesContent":["export const API_URL = 'http://api.unicdn.net/v1/feeds/sportsbook/event/live.jsonp?app_id=ca7871d7&app_key=5371c125b8d99c8f6b5ff9a12de8b85a'\r\nexport const sportsIcons = ['FOOTBALL', 'TENNIS', 'BASKETBALL'] ;\r\nexport const API_CACHE_TIME = 2*60000;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { sportsIcons } from '../constants';\r\nimport { formatEventDate } from '../utils';\r\n\r\nconst LiveEvent = props => {\r\n    const { liveEvent, liveScore } = props\r\n    let isScoreAvailable = liveScore.score ? true : false;\r\n\r\n    const iconType = sportsIcons.includes(liveEvent.sport) ?\r\n        `icon-${liveEvent.sport.toLowerCase()}` : 'icon-default';\r\n\r\n\r\n    return (\r\n        <div key={liveEvent.id} className='live-event-wrapper'>\r\n            <div className='live-score'>\r\n                {\r\n                    isScoreAvailable ? `${liveScore.score.away} - ${liveScore.score.home}` : 'Score Not Available'\r\n                }\r\n            </div>\r\n            <div className='live-teams'>\r\n                <span className={`icon ${iconType}`}></span>\r\n                <span className='teams-name'>{liveEvent.name}</span>\r\n            </div>\r\n            <div className='event-date'>\r\n                {formatEventDate(liveEvent.start)}\r\n            </div>\r\n            <div>\r\n                <a className='bet-button' href={`https://www.unibet.com/betting#event/live/${liveEvent.id}`} rel=\"noopener noreferrer\" target=\"_blank\" role='button'>Place a bet</a>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nLiveEvent.prototype = {\r\n    liveEvent: PropTypes.shape({\r\n        sport: PropTypes.string,\r\n        id: PropTypes.number,\r\n        start: PropTypes.string,\r\n        name: PropTypes.string\r\n    }),\r\n    liveScore: PropTypes.shape({\r\n        score: PropTypes.object\r\n    })\r\n};\r\n\r\n\r\n\r\n\r\nexport default LiveEvent;","export function formatEventDate(dateTime) {\r\n    const eventDate = new Date(dateTime);  \r\n    const isEventStartToday = new Date().setHours(0,0,0,0) === new Date(dateTime).setHours(0,0,0,0);  \r\n    const dateValue = isEventStartToday ? formatTodayDate(eventDate): formateDate(eventDate);\r\n    return dateValue;\r\n\r\n}\r\n\r\nfunction formatTodayDate(eventDate) {\r\n const hours = eventDate.getHours() < 10 ? `0${eventDate.getHours()}` : eventDate.getHours();\r\n const minutes = eventDate.getMinutes() < 10 ? `0${eventDate.getMinutes()}` : eventDate.getMinutes();\r\n    return `Today, ${hours}:${minutes}`;\r\n}\r\n\r\nfunction formateDate(eventDate) {\r\n    const year = eventDate.getFullYear();\r\n    const month = eventDate.getMonth()+1 < 10 ? `0${eventDate.getMonth()+1}` : eventDate.getMonth()+1;\r\n    const date = eventDate.getDate() < 10 ? `0${eventDate.getDate()}` : eventDate.getDate();\r\n    return `${year}-${month}-${date}`;\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport Slider from \"react-slick\";\r\nimport LiveEvent from './live-event';\r\n\r\nconst LiveMatches = props =>  {\r\n        const { liveMatches } = props;\r\n        const settings = {\r\n            dots: false,\r\n            speed: 500,\r\n            autoplay:true,\r\n            slidesToShow: 1,\r\n            slidesToScroll: 1,\r\n            className: 'live-match-slider',\r\n            autoplaySpeed: 3000\r\n        };\r\n        if (liveMatches.length === 0) {\r\n            return null;\r\n        } else {\r\n            return (\r\n                <Slider {...settings}>\r\n                    {liveMatches.liveEvents.map(match => {\r\n                        return (\r\n                        <div key={match.event.id}>\r\n                        <LiveEvent\r\n                            liveEvent={match.event} liveScore={match.liveData}\r\n                        />\r\n                        </div>)\r\n                    })}\r\n                </Slider>\r\n\r\n            );\r\n        }\r\n    }\r\n   \r\n    LiveMatches.prototype = {\r\n        liveMatches: PropTypes.shape({\r\n            liveEvents: PropTypes.array\r\n        })\r\n    }   \r\n\r\nexport default LiveMatches;","import React, { Component } from 'react';\nimport Spinner from 'react-spinkit';\nimport LiveMatches from './components/live-matches';\nimport { API_CACHE_TIME, API_URL } from './constants';\nimport './styles/main.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      error: null,\n      liveMatches: []\n    };\n  }\n\n  componentDidMount() {\n    this.getLiveMatches();\n  }\n\n  getLiveMatches() {\n    const currentTime = new Date().getTime();\n    const lastFetchedTime = localStorage.getItem('fetchedTime');\n    let data = localStorage.getItem('data');\n    \n    if (!lastFetchedTime || parseInt(lastFetchedTime) + API_CACHE_TIME < currentTime) {\n      fetch(API_URL).then(response => response.json())\n        .then(data => {\n          this.setState({ liveMatches: data, isLoading: false })\n          localStorage.setItem('data', JSON.stringify(data))\n          localStorage.setItem('fetchedTime', currentTime)\n        })\n        .catch(error => this.setState({ error, isLoading: false }));\n    } else {\n      this.setState({ liveMatches: JSON.parse(data), isLoading: false })\n    }\n  }\n\n\n  render() {\n    const { isLoading } = this.state;\n    return (\n      <div className='matches-container'>\n        { isLoading ? \n        <Spinner name=\"line-scale\" color=\"green\" />\n        : <LiveMatches liveMatches={this.state.liveMatches}/>} \n      </div>\n    );\n  }\n}\n\nexport default App;\n","import 'react-app-polyfill/ie9';\nimport 'matchmedia-polyfill';\nimport 'matchmedia-polyfill/matchMedia.addListener';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(<Router basename={process.env.PUBLIC_URL}><App /></Router>, document.getElementById('live-matches'));\n\n"],"sourceRoot":""}